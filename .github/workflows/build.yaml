name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.RELEASE_TOKEN }}

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20.x

    - name: Run yarn install
      uses: borales/actions-yarn@v5
      with:
        cmd: install
        dir: scriptured-prayer-components
  
    - name: Run yarn build
      uses: borales/actions-yarn@v5
      with:
        cmd: build
        dir: scriptured-prayer-components

    - uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: pip
    - name: Install poetry
      uses: abatilo/actions-poetry@v3
    - name: Install dependencies
      run: /root/.local/bin/poetry install --no-root
    - name: Run collectstatic
      run: /root/.local/bin/poetry run python manage.py collectstatic --noinput
    - name: Generate Requirements file
      run: /root/.local/bin/poetry export -f requirements.txt --output requirements.txt --without-hashes
    - name: Get version
      id: semantic-release
      run: /root/.local/bin/poetry run semantic-release version --print
    - name: package the release
      run: |
        mkdir dist
        mkdir scriptured-prayer-${{ steps.semantic-release.outputs.tag }}
        mv "prayerapp" "scriptured_prayer" "LICENSE.md" "manage.py" "requirements.txt" "README.md" scriptured-prayer-${{ steps.semantic-release.outputs.tag }}
        tar -czvf dist/scriptured-prayer-${{ steps.semantic-release.outputs.tag }}.tar.gz scriptured-prayer-${{ steps.semantic-release.outputs.tag }}
    - name: Upload Release
      env:
        GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      run: /root/.local/bin/poetry run semantic-release version && /root/.local/bin/poetry run semantic-release publish