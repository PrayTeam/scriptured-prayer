name: Deploy

on:
  release:
    types: [published]
  workflow_dispatch: # Only used for production deployments

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    steps:  
    
    # Thank you user16986 https://community.cloudflare.com/t/cloudflared-tunnel-not-working-in-github-action-runner/639186
    - name: install cloudflared and ansible
      run: |
        curl -L https://pkg.cloudflare.com/cloudflare-main.gpg | sudo tee /usr/share/keyrings/cloudflare-archive-keyring.gpg >/dev/null
        echo "deb [signed-by=/usr/share/keyrings/cloudflare-archive-keyring.gpg] https://pkg.cloudflare.com/cloudflared $(lsb_release -cs) main" | sudo tee  /etc/apt/sources.list.d/cloudflared.list
        sudo apt update
        sudo apt install -y cloudflared pip
        sudo pip install ansible-core github3.py
        sudo ansible-galaxy collection install community.general community.postgresql ansible.posix
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Authenticate with cloudflared
      run: |
        mkdir -p ~/.cloudflared
        echo "${{ secrets.CLOUDFLARED_AUTH_CERT }} > ~/.cloudflared/cert.pem"
    - name: setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ vars.SERVER_HOSTNAME }} ssh-ed25519 ${{ vars.SERVER_ED25519_HASH }}" >> ~/.ssh/known_hosts
        echo "${{ secrets.DEPLOYMENT_SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
    - name: setup SSH Tunnel for non-production environments
      if: ${{ github.event_name != 'workflow_dispatch' || github.ref != 'refs/heads/main' }}
      run: |
        echo "Host ${{ vars.SERVER_HOSTNAME }}" > ~/.ssh/config
        echo "  ProxyCommand /usr/bin/cloudflared access ssh --hostname %h" >> ~/.ssh/config
    - name: Deploy the application
      run: ansible-playbook ansible/deploy.yaml -i "${{ vars.SERVER_HOSTNAME }}," --private-key ~/.ssh/id_ed25519 --user deploy
