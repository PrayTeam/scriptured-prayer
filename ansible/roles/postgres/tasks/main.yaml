---

- include_role:
    name: common
    public: true

- name: Install OS Packages
  become: true
  dnf:
    name:
      - postgresql-server
      - postgresql-contrib
      - oidentd
    state: latest
    disable_gpg_check: yes

- name: Upgrade/Install Python packages (Ansible requirements)
  become: true
  become_user: postgres
  pip: 
    name:
      - psycopg2-binary
    state: latest

- name: Start/Enable oidentd
  become: true
  service: name=oidentd state=started enabled=yes

- name: Create the database user
  become: true
  user:
    name: "{{ db_user }}"
    state: present
    shell: /bin/bash
    createhome: yes

- name: Drop the PostgreSQL database
  become: true
  become_user: postgres
  postgresql_db:
    name: "{{ db_name }}"
    state: absent
  when: new_db and db_name in postgres_db_info.databases

- name: "Initialize PostgreSQL"
  become: true
  become_user: postgres
  command: "postgresql-setup --initdb --unit postgresql"
  when: not postgres_data.stat.exists

- name: Ensure the PostgreSQL service is running
  become: true
  service: name=postgresql state=started enabled=yes

- name: Setup the PostgreSQL database
  become: true
  become_user: postgres
  postgresql_db:
    name: "{{ db_name }}"
    encoding: UTF-8
    state: present
  register: db_created

- name: Configure the PostgreSQL server timezone
  become: true
  become_user: postgres
  postgresql_set:
    name: TimeZone
    value: 'UTC'

- name: Configure the PostgreSQL server transaction isolation
  become: true
  become_user: postgres
  postgresql_set:
    name: default_transaction_isolation
    value: 'read committed'

- name: Setup the PostgreSQL user
  become: true
  become_user: postgres
  postgresql_user:
    db: "{{ db_name }}"
    name: "{{ db_user }}"
    state: present

- name: Set Database Permissions
  become: true
  become_user: postgres
  postgresql_privs:
    db: "{{ db_name }}"
    privs: "ALL"
    type: database
    role: "{{ db_user }}"
    state: present
  when: db_created.changed

- name: Set Schema Permissions
  become: true
  become_user: postgres
  postgresql_privs:
    db: "{{ db_name }}"
    privs: "CREATE"
    type: schema
    role: "{{ db_user }}"
    objs: "public"
    state: present
  when: db_created.changed
